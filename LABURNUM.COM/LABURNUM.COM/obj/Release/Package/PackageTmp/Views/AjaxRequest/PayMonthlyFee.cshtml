@model DTO.LABURNUM.COM.StudentFeeDetailModel

@{int counter = 1;}

@if (new LABURNUM.COM.Component.SessionManagement().GetLoginBy() == DTO.LABURNUM.COM.Utility.UserType.GetValue(DTO.LABURNUM.COM.Utility.EnumUserType.ADMIN) || new LABURNUM.COM.Component.SessionManagement().GetLoginBy() == DTO.LABURNUM.COM.Utility.UserType.GetValue(DTO.LABURNUM.COM.Utility.EnumUserType.PRINCIPLE) || new LABURNUM.COM.Component.SessionManagement().GetLoginBy() == DTO.LABURNUM.COM.Utility.UserType.GetValue(DTO.LABURNUM.COM.Utility.EnumUserType.ACCOUNT))
{
    using (Ajax.BeginForm(new AjaxOptions { OnBegin = "OnPayMonthlyFeeBegin", OnSuccess = "OnPayMonthlyFeeSuccess", Url = @LABURNUM.COM.Component.Constants.URL.WEBSITEURL + "StudentFee/PayMonthlyFee" }))
    {
    <div class="modal-dialog modal-dialogadept modal-dialogadept-mini" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <img src="@LABURNUM.COM.Component.Constants.URL.WEBSITEURLWITHOUTSLASH/Images/button-close.png" /></span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Pay Student Monthly Fee</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Pay For The Month <sup>*</sup> <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.DropDownList("PayForTheMonth", new SelectList(Model.Months, "MonthId", "MonthName"), "Please Select A Month", new { @id = "ddlMonth", @autocomplete = "Off", @class = "ToReset", @onChange = "ShowHideAnnualFee();" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Monthly Fee <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.MonthlyFee, new { @id = "txtMonthlyFee", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Transport Fee <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                <div id="hdnTranportCharges" class="display_none">@Model.TransportFee</div>
                                @Html.TextBoxFor(x => x.TransportFee, new { @id = "txtTransportFee", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Late Fee Panelty <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.LateFee, new { @id = "txtLateFee", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    @* <div class="col-md-12" id="divAnnualFunctionFee">
                        <div class="col-md-5">
                            <span class="score_adept">Annual Function Fee <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.AnnualFunctionFee, new { @id = "txtAnnualFunctionFee", @readonly = "yes" })
                            </div>
                        </div>
                    </div>*@
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Last Pending Fee <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.LastPendingFee, new { @id = "txtLastPendingFee", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Chq. Bounc Panelty <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.BounceChequePanelty, new { @id = "txtBounceChequePanelty", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    @*<table>
                        <thead>
                            <tr>
                                <th>Chq. Date</th>
                                <th>Chq. No.</th>
                                <th>Bank</th>
                                <th>Chq. Amt.</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Model.BounceChequeAmount</td>
                                <td>@Model.BounceChequeNumber</td>
                                <td>@Model.BounceChequeBankName</td>
                                <td>@Model.BounceChequeAmount</td>
                            </tr>
                        </tbody>
                    </table>*@

                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Chq. Bounce Amt. <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.BounceChequeAmount, new { @id = "txtBounceChequeAmount", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Chq.Bounce No. <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.BounceChequeNumber, new { @id = "txtBounceChequeNumber", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Chq. Date <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.BounceChequeDate, new { @id = "txtBounceChequeDate", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Bank Name <sup>*</sup>  <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.BounceChequeBankName, new { @id = "txtBounceChequeBankName", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Discount Amount <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.DiscountAmount, new { @id = "txtDiscountAmount", @autocomplete = "Off", @class = "ToReset", onkeypress = "return isNumber(event)", onkeyup = "CalculatePayableAmount();CalculateBalanceAmount();", @maxlength = "5" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Remarks <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextAreaFor(x => x.DiscountRemarks, new { @id = "txtDiscountRemarks", @autocomplete = "Off", @class = "ToReset" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Total Payable <i>:</i></span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                <div class="display_none" id="hdnTotalFees1">@(Model.MonthlyFee + Model.LateFee + Model.LastPendingFee)</div>
                                <div class="display_none" id="hdnTotalFees">@(Model.MonthlyFee + Model.TransportFee + Model.LateFee + Model.LastPendingFee)</div>
                                @Html.TextBoxFor(x => x.TotalPayableAmount, new { @id = "txtTotalPayableAmount", @readonly = "yes" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Paid By Cash <sup>*</sup> : </span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.CashPaidAmount, new { @id = "txtCashPaidAmount", onkeyup = "CalculateBalanceAmount();", onkeypress = "return isNumber(event)", @autocomplete = "Off" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Is Paid By Cheque : </span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                <input type="checkbox" id="chkboxPaidByCheque" onclick="ShowHideCheque();" />
                            </div>
                        </div>
                    </div>
                    <div class="display_none" id="divChequeDetails">
                        <div class="col-md-12">
                            <div class="col-md-5">
                                <span class="score_adept">Paid By Cheque <sup>* </sup>: </span>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.ChequePaidAmount, new { @id = "txtChequePaidAmount", onkeyup = "CalculateBalanceAmount();", onkeypress = "return isNumber(event)", @autocomplete = "Off" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-5">
                                <span class="score_adept">Cheque No. <sup>* </sup>: </span>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.ChequeNumber, new { @id = "txtChequeNumber", onkeypress = "return isNumber(event)", @autocomplete = "Off", @class = "ToReset" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-5">
                                <span class="score_adept">Cheque Date <sup>* </sup>: </span>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.ChequeDate, new { @id = "txtChequeDate", @autocomplete = "Off", @class = "ToReset" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-5">
                                <span class="score_adept">Bank Name <sup>* </sup>: </span>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    @Html.DropDownList("BankId", new SelectList(Model.Banks, "BankId", "BankName"), new { @id = "ddlBank", @autocomplete = "Off", @class = "ToReset" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <span class="score_adept">Current Pending : </span>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.PendingFee, new { @id = "txtPendingFee", @readonly = "yes", @autocomplete = "Off", @class = "ToReset" })
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-md-12 text-center" id="btndiv">
                    <button id="btnSubmit" type="submit" class="btn btn-default btn-adeptsubmit btn-adeptsubmitfirst">PAY <i class="fa fa-floppy-o" aria-hidden="true"></i></button>
                    <button type="button" id="btnClose" class="btn btn-default btn-adeptsubmit btn-danger" data-dismiss="modal" aria-label="Close">CLOSE <i class="fa fa-times" aria-hidden="true"></i></button>
                </div>
                <div id="divPopupLoader" class="col-md-12 display_none text-center margin_small">
                    <img src="@LABURNUM.COM.Component.Constants.URL.WEBSITEURLWITHOUTSLASH/Images/loader.gif" />
                </div>
                <div id="divPopupMessage" class="display_none text-center margin_small col-md-12"></div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(x => x.ClassId)
    @Html.HiddenFor(x => x.SectionId)
    @Html.HiddenFor(x => x.StudentId)
    @Html.HiddenFor(x => x.IsNewAdmission)
    @Html.HiddenFor(x => x.AnnualFunctionFeePayableMonth, new { @id = "hdbAFFPM" })
    }
    <script type="text/javascript">
        $(document).ready(function () {
            OnPayMonthlyFeeIndexReady();
        });
    </script>
}
else
{
    <div class="modal-dialog modal-dialogadept modal-dialogadept-mini" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <img src="@LABURNUM.COM.Component.Constants.URL.WEBSITEURLWITHOUTSLASH/Images/button-close.png" /></span>
                </button>
                <h4 class="modal-title">@(LABURNUM.COM.Component.Constants.ERRORMESSAGES.ACCESS_DENIED)</h4>
            </div>
        </div>
    </div>
}